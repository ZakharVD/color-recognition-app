{"ast":null,"code":"var _jsxFileName = \"/Users/zakharmac/Desktop/React Projects/color-recognition-app/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport ImageLinkForm from './components/ImageLinkForm';\nimport ImageOutput from './components/ImageOutput';\nimport ColorOutput from './components/ColorOutput';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst clarifaiRequest = imageUrl => {\n  const PAT = '67900a5135eb4d568e18a99946e5825f';\n  const USER_ID = 'zakhar_vd';\n  const APP_ID = 'my-first-application';\n  // const MODEL_ID = 'color-recognition'; \n  const IMAGE_URL = imageUrl;\n  const raw = JSON.stringify({\n    \"user_app_id\": {\n      \"user_id\": USER_ID,\n      \"app_id\": APP_ID\n    },\n    \"inputs\": [{\n      \"data\": {\n        \"image\": {\n          \"url\": IMAGE_URL\n        }\n      }\n    }]\n  });\n  return {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Authorization': 'Key ' + PAT\n    },\n    body: raw\n  };\n};\nclass App extends Component {\n  constructor() {\n    super();\n    this.displayColors = colorsArr => {\n      let populatedArr = [];\n      colorsArr.map(col => {\n        populatedArr.push(col.raw_hex);\n      });\n      return populatedArr;\n    };\n    this.colorChange = arr => {\n      console.log(arr);\n      this.setState({\n        colors: arr\n      });\n    };\n    this.onInputChange = event => {\n      // updating the state\n      this.setState({\n        input: event.target.value\n      });\n    };\n    this.onSubmit = () => {\n      //updating the state\n      this.setState({\n        imageURL: this.state.input\n      });\n      fetch(`https://api.clarifai.com/v2/models/color-recognition/outputs`, clarifaiRequest(this.state.input)).then(response => response.json()).then(result => {\n        this.colorChange(this.displayColors(result.outputs[0].data.colors));\n      }).catch(error => console.log('error', error));\n    };\n    this.state = {\n      input: '',\n      imageURL: '',\n      colors: [],\n      colorsCode: []\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(ImageLinkForm, {\n        onInput: this.onInputChange,\n        onSubmit: this.onSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ImageOutput, {\n        imageUrl: this.state.imageURL\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-center mt-3\",\n        children: /*#__PURE__*/_jsxDEV(ColorOutput, {\n          colors: this.state.colors\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["React","Component","ImageLinkForm","ImageOutput","ColorOutput","jsxDEV","_jsxDEV","clarifaiRequest","imageUrl","PAT","USER_ID","APP_ID","IMAGE_URL","raw","JSON","stringify","method","headers","body","App","constructor","displayColors","colorsArr","populatedArr","map","col","push","raw_hex","colorChange","arr","console","log","setState","colors","onInputChange","event","input","target","value","onSubmit","imageURL","state","fetch","then","response","json","result","outputs","data","catch","error","colorsCode","render","children","onInput","fileName","_jsxFileName","lineNumber","columnNumber","className"],"sources":["/Users/zakharmac/Desktop/React Projects/color-recognition-app/src/App.js"],"sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport ImageLinkForm from './components/ImageLinkForm';\nimport ImageOutput from './components/ImageOutput';\nimport ColorOutput from './components/ColorOutput';\n\n\nconst clarifaiRequest = (imageUrl) => {\n  const PAT = '67900a5135eb4d568e18a99946e5825f';\n  const USER_ID = 'zakhar_vd';       \n  const APP_ID = 'my-first-application';\n  // const MODEL_ID = 'color-recognition'; \n  const IMAGE_URL = imageUrl;\n\n\n  const raw = JSON.stringify({\n    \"user_app_id\": {\n        \"user_id\": USER_ID,\n        \"app_id\": APP_ID\n    },\n    \"inputs\": [\n        {\n            \"data\": {\n                \"image\": {\n                    \"url\": IMAGE_URL\n                }\n            }\n        }\n    ]\n});\n\nreturn {\n  method: 'POST',\n  headers: {\n      'Accept': 'application/json',\n      'Authorization': 'Key ' + PAT\n  },\n  body: raw\n};\n\n}\n\n\nclass App extends Component {\n  constructor() {\n    super()\n    this.state = {\n      input: '',\n      imageURL: '',\n      colors: [],\n      colorsCode: []\n    }\n  }\n\n  displayColors = (colorsArr) => {\n    let populatedArr = [];\n    colorsArr.map((col) => {\n        populatedArr.push(col.raw_hex);\n      });\n  \n    return(populatedArr);\n  }\n\n  colorChange = (arr) => {\n    console.log(arr);\n    this.setState({colors: arr});\n  }\n\n  onInputChange = (event) => {\n    // updating the state\n    this.setState({input: event.target.value});\n  }\n  \n\n  onSubmit = () => {\n    //updating the state\n    this.setState({imageURL: this.state.input});\n    fetch(`https://api.clarifai.com/v2/models/color-recognition/outputs`, clarifaiRequest(this.state.input))\n      .then(response => response.json())\n      .then((result) => {\n        this.colorChange(this.displayColors(result.outputs[0].data.colors))\n      })\n      .catch(error => console.log('error', error));\n  }\n\n  render() {\n    return (\n      <div>\n        <ImageLinkForm onInput={this.onInputChange} onSubmit={this.onSubmit}/>\n        <ImageOutput imageUrl={this.state.imageURL}/>\n        <div className='flex justify-center mt-3'>\n          <ColorOutput colors={this.state.colors}/>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}