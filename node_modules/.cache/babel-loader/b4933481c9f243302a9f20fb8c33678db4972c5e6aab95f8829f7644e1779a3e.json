{"ast":null,"code":"var _jsxFileName = \"/Users/zakharmac/Desktop/React Projects/colorfinder/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport ImageLinkForm from './components/ImageLinkForm';\nimport ColorDetection from './components/ColorDetection';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst clarifaiRequest = imageUrl => {\n  const PAT = '67900a5135eb4d568e18a99946e5825f';\n  const USER_ID = 'zakhar_vd';\n  const APP_ID = 'my-first-application';\n  const MODEL_ID = 'color-recognition';\n  const IMAGE_URL = imageUrl;\n  const raw = JSON.stringify({\n    \"user_app_id\": {\n      \"user_id\": USER_ID,\n      \"app_id\": APP_ID\n    },\n    \"inputs\": [{\n      \"data\": {\n        \"image\": {\n          \"url\": IMAGE_URL\n        }\n      }\n    }]\n  });\n  const requestOptions = {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Authorization': 'Key ' + PAT\n    },\n    body: raw\n  };\n  return requestOptions;\n};\nclass App extends Component {\n  constructor() {\n    super();\n    this.onInputChange = event => {\n      // updating the state\n      this.setState = {\n        input: event\n      };\n    };\n    this.onSubmit = () => {\n      fetch(\"https://api.clarifai.com/v2/models/\" + MODEL_ID + \"/outputs\", clarifaiRequest(this.state.input)).then(response => response.json()).then(result => console.log(result)).catch(error => console.log('error', error));\n    };\n    this.state = {\n      input: ''\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(ImageLinkForm, {\n        onInput: this.onInputChange,\n        onSubmit: this.onSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ColorDetection, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["React","Component","ImageLinkForm","ColorDetection","jsxDEV","_jsxDEV","clarifaiRequest","imageUrl","PAT","USER_ID","APP_ID","MODEL_ID","IMAGE_URL","raw","JSON","stringify","requestOptions","method","headers","body","App","constructor","onInputChange","event","setState","input","onSubmit","fetch","state","then","response","json","result","console","log","catch","error","render","children","onInput","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/zakharmac/Desktop/React Projects/colorfinder/src/App.js"],"sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport ImageLinkForm from './components/ImageLinkForm';\nimport ColorDetection from './components/ColorDetection';\n\nconst clarifaiRequest = (imageUrl) => {\n  const PAT = '67900a5135eb4d568e18a99946e5825f';\n  const USER_ID = 'zakhar_vd';       \n  const APP_ID = 'my-first-application';\n  const MODEL_ID = 'color-recognition';\n  const IMAGE_URL = imageUrl;\n\n  const raw = JSON.stringify({\n    \"user_app_id\": {\n        \"user_id\": USER_ID,\n        \"app_id\": APP_ID\n    },\n    \"inputs\": [\n        {\n            \"data\": {\n                \"image\": {\n                    \"url\": IMAGE_URL\n                }\n            }\n        }\n    ]\n});\n\nconst requestOptions = {\n  method: 'POST',\n  headers: {\n      'Accept': 'application/json',\n      'Authorization': 'Key ' + PAT\n  },\n  body: raw\n};\n\nreturn requestOptions;\n\n}\n\n\nclass App extends Component {\n  constructor() {\n    super()\n    this.state = {\n      input: '',\n    }\n  }\n\n  onInputChange = (event) => {\n    // updating the state\n    this.setState = {input: event};\n  }\n\n  onSubmit = () => {\n    \n    fetch(\"https://api.clarifai.com/v2/models/\" + MODEL_ID + \"/outputs\", clarifaiRequest(this.state.input))\n    .then(response => response.json())\n    .then(result => console.log(result))\n    .catch(error => console.log('error', error));\n\n  }\n\n  render() {\n    return (\n      <div>\n        <ImageLinkForm onInput={this.onInputChange} onSubmit={this.onSubmit}/>\n        <ColorDetection/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAO,WAAW;AAClB,OAAOC,aAAa,MAAM,4BAA4B;AACtD,OAAOC,cAAc,MAAM,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzD,MAAMC,eAAe,GAAIC,QAAQ,IAAK;EACpC,MAAMC,GAAG,GAAG,kCAAkC;EAC9C,MAAMC,OAAO,GAAG,WAAW;EAC3B,MAAMC,MAAM,GAAG,sBAAsB;EACrC,MAAMC,QAAQ,GAAG,mBAAmB;EACpC,MAAMC,SAAS,GAAGL,QAAQ;EAE1B,MAAMM,GAAG,GAAGC,IAAI,CAACC,SAAS,CAAC;IACzB,aAAa,EAAE;MACX,SAAS,EAAEN,OAAO;MAClB,QAAQ,EAAEC;IACd,CAAC;IACD,QAAQ,EAAE,CACN;MACI,MAAM,EAAE;QACJ,OAAO,EAAE;UACL,KAAK,EAAEE;QACX;MACJ;IACJ,CAAC;EAET,CAAC,CAAC;EAEF,MAAMI,cAAc,GAAG;IACrBC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACL,QAAQ,EAAE,kBAAkB;MAC5B,eAAe,EAAE,MAAM,GAAGV;IAC9B,CAAC;IACDW,IAAI,EAAEN;EACR,CAAC;EAED,OAAOG,cAAc;AAErB,CAAC;AAGD,MAAMI,GAAG,SAASnB,SAAS,CAAC;EAC1BoB,WAAWA,CAAA,EAAG;IACZ,KAAK,EAAE;IAAA,KAMTC,aAAa,GAAIC,KAAK,IAAK;MACzB;MACA,IAAI,CAACC,QAAQ,GAAG;QAACC,KAAK,EAAEF;MAAK,CAAC;IAChC,CAAC;IAAA,KAEDG,QAAQ,GAAG,MAAM;MAEfC,KAAK,CAAC,qCAAqC,GAAGhB,QAAQ,GAAG,UAAU,EAAEL,eAAe,CAAC,IAAI,CAACsB,KAAK,CAACH,KAAK,CAAC,CAAC,CACtGI,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACjCF,IAAI,CAACG,MAAM,IAAIC,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC,CAAC,CACnCG,KAAK,CAACC,KAAK,IAAIH,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEE,KAAK,CAAC,CAAC;IAE9C,CAAC;IAjBC,IAAI,CAACR,KAAK,GAAG;MACXH,KAAK,EAAE;IACT,CAAC;EACH;EAgBAY,MAAMA,CAAA,EAAG;IACP,oBACEhC,OAAA;MAAAiC,QAAA,gBACEjC,OAAA,CAACH,aAAa;QAACqC,OAAO,EAAE,IAAI,CAACjB,aAAc;QAACI,QAAQ,EAAE,IAAI,CAACA;MAAS;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAE,eACtEtC,OAAA,CAACF,cAAc;QAAAqC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAE;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACb;EAEV;AACF;AAEA,eAAevB,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}